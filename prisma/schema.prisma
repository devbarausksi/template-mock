// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model address {
  id           String    @id @default(uuid())
  streetName   String
  city         String
  country      String
  neighborhood String?
  state        String?
  number       String?
  complement   String?
  zipCode      String
  isDefault    Boolean   @default(false)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt
  deletedAt    DateTime?
  customer     customer? @relation(fields: [customerId], references: [id])
  customerId   String?
}

model customer {
  id          String    @id @default(uuid())
  name        String
  email       String
  document    String    @unique
  phone       String
  observation String?
  isActive    Boolean   @default(true)
  addresses   address[]
  order       order[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  deletedAt   DateTime?
}

model currency {
  id           String         @id @default(uuid())
  name         String
  code         String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime?      @updatedAt
  pricingTable pricingTable[]
}

model pricingTable {
  id         String      @id @default(uuid())
  code       String
  name       String
  isDefault  Boolean     @default(false)
  validFrom  DateTime?
  validTo    DateTime?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime?   @updatedAt
  deletedAt  DateTime?
  currency   currency?   @relation(fields: [currencyId], references: [id])
  currencyId String?
  priceItem  priceItem[]
  order      order[]
}

model product {
  id        String      @id @default(uuid())
  code      String
  name      String
  height    Float
  width     Float
  depth     Float
  unit      String
  createdAt DateTime    @default(now())
  updatedAt DateTime?   @updatedAt
  deletedAt DateTime?
  priceItem priceItem[]
  orderItem orderItem[]

  @@fulltext([name, code])
}

model priceItem {
  id             String        @id @default(uuid())
  price          Float
  pricingTable   pricingTable? @relation(fields: [pricingTableId], references: [id])
  pricingTableId String?
  product        product?      @relation(fields: [productId], references: [id])
  productId      String?
}

model paymentMethod {
  id        String    @id @default(uuid())
  name      String
  isManual  Boolean
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  order     order[]
}

model paymentForm {
  id          String    @id @default(uuid())
  description String
  isActive    Boolean
  order       order[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
}

model salesperson {
  id        String    @id @default(uuid())
  name      String
  order     order[]
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}

model partList {
  id          String     @id @default(uuid())
  annotation  String
  height      Float
  width       Float
  depth       Float
  orderItem   orderItem? @relation(fields: [orderItemId], references: [id])
  orderItemId String?
}

model orderItem {
  id         String     @id @default(uuid())
  quantity   Float
  priceNet   Float
  priceTotal Float
  discount   Int
  increase   Int
  order      order?     @relation(fields: [orderId], references: [id])
  orderId    String?
  product    product?   @relation(fields: [productId], references: [id])
  productId  String?
  partList   partList[]
}

model orderFreight {
  id        String    @id @default(uuid())
  price     Float
  order     order?    @relation(fields: [orderId], references: [id])
  orderId   String?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}

model order {
  id              String         @id @default(uuid())
  number          Int
  items           orderItem[]
  createdAt       DateTime       @default(now())
  updatedAt       DateTime?      @updatedAt
  canceledAt      DateTime?
  annotation      String?
  customer        customer?      @relation(fields: [customerId], references: [id])
  customerId      String?
  pricingTable    pricingTable?  @relation(fields: [pricingTableId], references: [id])
  pricingTableId  String?
  orderFreight    orderFreight[]
  salesperson     salesperson?   @relation(fields: [salespersonId], references: [id])
  salespersonId   String?
  paymentMethod   paymentMethod? @relation(fields: [paymentMethodId], references: [id])
  paymentMethodId String?
  paymentForm     paymentForm?   @relation(fields: [paymentFormId], references: [id])
  paymentFormId   String?
}
